{% set name = "CPyCppyy" %}
{% set version = "1.12.16" %}

package:
  name: {{ name | lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/c/cpycppyy/CPyCppyy-{{ version }}.tar.gz
  sha256: 09a845652ac1a82777ec499dda862f54493c1560e9df4cadecda09ecde9e4202
  patches:
    - cflags.patch  # [build_platform != target_platform]

build:
  number: 1
  skip: true  # [win or python_impl != "cpython"]
  script: {{ PYTHON }} -m pip install . --no-deps -vv

requirements:
  build:
    - python                              # [build_platform != target_platform]
    - cross-python_{{ target_platform }}  # [build_platform != target_platform]
    - {{ compiler('cxx') }}
  host:
    - python
    - pip
    # cppyy-cling, cppyy-backend, cpycppyy and cppyy are essentially a single package, so we always pin exactly between these.
    - cppyy-backend ==1.15.2
    # cppyy-cling, cppyy-backend, cpycppyy and cppyy are essentially a single package, so we always pin exactly between these.
    - cppyy-cling ==6.30.0
  run:
    - python
    # cppyy-cling, cppyy-backend, cpycppyy and cppyy are essentially a single package, so we always pin exactly between these.
    - cppyy-backend ==1.15.2
    # cppyy-cling, cppyy-backend, cpycppyy and cppyy are essentially a single package, so we always pin exactly between these.
    - cppyy-cling ==6.30.0

test:
  commands:
    # Importing this extension module is going to fail (it uses some dlopen()
    # magic when cppyy itself is imported.) So we check instead that something
    # has been built at least.
    - ls $SP_DIR/libcppyy*.so

about:
  home: https://pypi.org/project/CPyCppyy/
  license: BSD-3-Clause
  license_family: BSD
  license_file: LICENSE.txt
  summary: CPython-C++ bindings interface based on Cling/LLVM
  description: |
    A CPython extension module to access Cling through cppyy-backend.
  doc_url: http://cppyy.readthedocs.io/
  dev_url: https://bitbucket.org/wlav/cpycppyy/src

extra:
  recipe-maintainers:
    - saraedum
    - isuruf
